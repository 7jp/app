{"version":3,"sources":["webpack:///./src/interfaces/one-to-many/input.vue?779f","webpack:///src/interfaces/one-to-many/input.vue","webpack:///./src/interfaces/one-to-many/input.vue?2156","webpack:///./src/interfaces/one-to-many/input.vue","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js","webpack:///./src/interfaces/one-to-many/input.vue?e9e6"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","relationSetup","attrs","color","icon","_v","_s","$t","itemsRaw","on","click","toggleManualSort","name","size","manualSortActive","_e","_l","column","key","field","type","$event","changeSort","sort","asc","class","dragging","handle","ghost-class","disabled","sortable","start","end","model","value","callback","$$v","itemsSorted","expression","item","relatedKey","startEdit","$tempKey","interface-type","fieldInfo","interface","collection","datatype","options","directives","rawName","stopPropagation","removeRelated","readonly","addNew","selectExisting","relation","collection_many","fields","visibleFields","filters","stagedSelection","selectionPrimaryKeys","input","stageSelection","done","closeSelection","cancel","cancelSelection","to","title","buttons","save","text","close","editExisting","saveEdits","relatedCollectionFields","relatedCollection","values","stage-value","stageValue","addNewItem","new-item","relatedDefaultsWithEdits","staticRenderFns","inputvue_type_script_lang_js_","mixins","interface_default","a","data","edits","loading","error","computed","items","primaryKey","map","hasOwnProperty","Object","objectSpread","shortid_default","generate","get","_this","_","orderBy","filter","$delete","set","newValue","_this2","clone","index","defineProperty","relatedSortField","emitValue","find","primary_key","relatedField","field_many","Array","isArray","val","trim","split","columns","_this3","$helpers","formatTitle","relatedDefaultValues","mapValues","default_value","_this4","watch","fetchItems","created","onSearchInput","debounce","methods","primaryKeys","_this5","currentSelection","newSelection","_ref2","includes","newlySelectedPrimaryKeys","difference","i","newlySelected","concat","toConsumableArray","tempKey","_this6","$api","getItem","then","res","catch","console","_ref4","$set","_this7","esm_typeof","$emit","_this8","id","_this9","_ref5","setViewQuery","q","_this10","newItems","undefined","length","currentValue","merge","finally","one_to_many_inputvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","module","exports","props","String","required","default","Number","Boolean","newItem","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_0_id_85aff184_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_vue_vue_type_style_index_0_id_85aff184_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"js/chunk-ce5d212c.1e7d702a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"interface-one-to-many\"},[(_vm.relationSetup === false)?_c('v-notice',{attrs:{\"color\":\"warning\",\"icon\":\"warning\"}},[_vm._v(\"\\n    \"+_vm._s(_vm.$t(\"interfaces-one-to-many-relation_not_setup\"))+\"\\n  \")]):[(_vm.itemsRaw.length)?_c('div',{staticClass:\"table\"},[_c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"row\"},[(_vm.sortable)?_c('button',{staticClass:\"sort-column\",on:{\"click\":_vm.toggleManualSort}},[_c('v-icon',{attrs:{\"name\":\"sort\",\"size\":\"18\",\"color\":_vm.manualSortActive ? 'action' : 'light-gray'}})],1):_vm._e(),_vm._l((_vm.columns),function(column){return _c('button',{key:column.field,attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.changeSort(column.field)}}},[_vm._v(\"\\n            \"+_vm._s(column.name)+\"\\n            \"),(_vm.sort.field === column.field)?_c('v-icon',{attrs:{\"name\":_vm.sort.asc ? 'arrow_downward' : 'arrow_upward',\"size\":\"16\"}}):_vm._e()],1)})],2)]),_c('draggable',{staticClass:\"body\",class:{ dragging: _vm.dragging },attrs:{\"handle\":\".drag-handle\",\"ghost-class\":\"o2m-drag-ghost\",\"disabled\":!_vm.sortable || !_vm.manualSortActive},on:{\"start\":function($event){_vm.dragging = true},\"end\":function($event){_vm.dragging = false}},model:{value:(_vm.itemsSorted),callback:function ($$v) {_vm.itemsSorted=$$v},expression:\"itemsSorted\"}},_vm._l((_vm.itemsSorted),function(item){return _c('div',{key:item[_vm.relatedKey],staticClass:\"row\",on:{\"click\":function($event){return _vm.startEdit(item[_vm.relatedKey], item.$tempKey)}}},[(_vm.sortable)?_c('div',{staticClass:\"sort-column\",class:{ disabled: !_vm.manualSortActive }},[_c('v-icon',{staticClass:\"drag-handle\",attrs:{\"name\":\"drag_handle\"}})],1):_vm._e(),_vm._l((_vm.columns),function(column){return _c('div',{key:column.field},[_c('v-ext-display',{attrs:{\"interface-type\":(column.fieldInfo || {}).interface || null,\"name\":column.field,\"type\":column.fieldInfo.type,\"collection\":_vm.collection,\"datatype\":column.fieldInfo.datatype,\"options\":column.fieldInfo.options,\"value\":item[column.field]}})],1)}),_c('button',{directives:[{name:\"tooltip\",rawName:\"v-tooltip\",value:(_vm.$t('remove_related')),expression:\"$t('remove_related')\"}],staticClass:\"remove-item\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.removeRelated(item[_vm.relatedKey])}}},[_c('v-icon',{attrs:{\"name\":\"close\"}})],1)],2)}),0)],1):_c('v-notice',[_vm._v(_vm._s(_vm.$t(\"no_items_selected\")))]),_c('div',{staticClass:\"buttons\"},[(_vm.options.allow_create)?_c('v-button',{attrs:{\"type\":\"button\",\"disabled\":_vm.readonly,\"icon\":\"add\"},on:{\"click\":function($event){_vm.addNew = true}}},[_vm._v(\"\\n        \"+_vm._s(_vm.$t(\"add_new\"))+\"\\n      \")]):_vm._e(),(_vm.options.allow_select)?_c('v-button',{attrs:{\"type\":\"button\",\"disabled\":_vm.readonly,\"icon\":\"playlist_add\"},on:{\"click\":function($event){_vm.selectExisting = true}}},[_vm._v(\"\\n        \"+_vm._s(_vm.$t(\"select_existing\"))+\"\\n      \")]):_vm._e()],1)],(_vm.selectExisting)?_c('v-item-select',{attrs:{\"collection\":_vm.relation.collection_many.collection,\"fields\":_vm.visibleFields,\"filters\":[],\"value\":_vm.stagedSelection || _vm.selectionPrimaryKeys},on:{\"input\":_vm.stageSelection,\"done\":_vm.closeSelection,\"cancel\":_vm.cancelSelection}}):_vm._e(),(_vm.editExisting)?_c('portal',{attrs:{\"to\":\"modal\"}},[_c('v-modal',{attrs:{\"title\":_vm.$t('editing_item'),\"buttons\":{\n        save: {\n          text: 'Save',\n          color: 'accent'\n        }\n      }},on:{\"close\":function($event){_vm.editExisting = false},\"save\":_vm.saveEdits}},[_c('div',{staticClass:\"edit-modal-body\"},[_c('v-form',{attrs:{\"fields\":_vm.relatedCollectionFields,\"collection\":_vm.relatedCollection,\"values\":_vm.editExisting},on:{\"stage-value\":_vm.stageValue}})],1)])],1):_vm._e(),(_vm.addNew)?_c('portal',{attrs:{\"to\":\"modal\"}},[_c('v-modal',{attrs:{\"title\":_vm.$t('creating_item'),\"buttons\":{\n        save: {\n          text: 'Save',\n          color: 'accent'\n        }\n      }},on:{\"close\":function($event){_vm.addNew = null},\"save\":_vm.addNewItem}},[_c('div',{staticClass:\"edit-modal-body\"},[_c('v-form',{attrs:{\"new-item\":\"\",\"fields\":_vm.relatedCollectionFields,\"collection\":_vm.collection,\"values\":_vm.relatedDefaultsWithEdits},on:{\"stage-value\":_vm.stageValue}})],1)])],1):_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"interface-one-to-many\">\n    <v-notice v-if=\"relationSetup === false\" color=\"warning\" icon=\"warning\">\n      {{ $t(\"interfaces-one-to-many-relation_not_setup\") }}\n    </v-notice>\n\n    <template v-else>\n      <div v-if=\"itemsRaw.length\" class=\"table\">\n        <div class=\"header\">\n          <div class=\"row\">\n            <button v-if=\"sortable\" class=\"sort-column\" @click=\"toggleManualSort\">\n              <v-icon name=\"sort\" size=\"18\" :color=\"manualSortActive ? 'action' : 'light-gray'\" />\n            </button>\n\n            <button\n              v-for=\"column in columns\"\n              :key=\"column.field\"\n              type=\"button\"\n              @click=\"changeSort(column.field)\"\n            >\n              {{ column.name }}\n              <v-icon\n                v-if=\"sort.field === column.field\"\n                :name=\"sort.asc ? 'arrow_downward' : 'arrow_upward'\"\n                size=\"16\"\n              />\n            </button>\n          </div>\n        </div>\n\n        <draggable\n          v-model=\"itemsSorted\"\n          class=\"body\"\n          handle=\".drag-handle\"\n          ghost-class=\"o2m-drag-ghost\"\n          :disabled=\"!sortable || !manualSortActive\"\n          :class=\"{ dragging }\"\n          @start=\"dragging = true\"\n          @end=\"dragging = false\"\n        >\n          <div\n            v-for=\"item in itemsSorted\"\n            :key=\"item[relatedKey]\"\n            class=\"row\"\n            @click=\"startEdit(item[relatedKey], item.$tempKey)\"\n          >\n            <div v-if=\"sortable\" class=\"sort-column\" :class=\"{ disabled: !manualSortActive }\">\n              <v-icon name=\"drag_handle\" class=\"drag-handle\" />\n            </div>\n            <div v-for=\"column in columns\" :key=\"column.field\">\n              <v-ext-display\n                :interface-type=\"(column.fieldInfo || {}).interface || null\"\n                :name=\"column.field\"\n                :type=\"column.fieldInfo.type\"\n                :collection=\"collection\"\n                :datatype=\"column.fieldInfo.datatype\"\n                :options=\"column.fieldInfo.options\"\n                :value=\"item[column.field]\"\n              />\n            </div>\n            <button\n              v-tooltip=\"$t('remove_related')\"\n              type=\"button\"\n              class=\"remove-item\"\n              @click.stop=\"removeRelated(item[relatedKey])\"\n            >\n              <v-icon name=\"close\" />\n            </button>\n          </div>\n        </draggable>\n      </div>\n\n      <v-notice v-else>{{ $t(\"no_items_selected\") }}</v-notice>\n\n      <div class=\"buttons\">\n        <v-button\n          v-if=\"options.allow_create\"\n          type=\"button\"\n          :disabled=\"readonly\"\n          icon=\"add\"\n          @click=\"addNew = true\"\n        >\n          {{ $t(\"add_new\") }}\n        </v-button>\n\n        <v-button\n          v-if=\"options.allow_select\"\n          type=\"button\"\n          :disabled=\"readonly\"\n          icon=\"playlist_add\"\n          @click=\"selectExisting = true\"\n        >\n          {{ $t(\"select_existing\") }}\n        </v-button>\n      </div>\n    </template>\n\n    <v-item-select\n      v-if=\"selectExisting\"\n      :collection=\"relation.collection_many.collection\"\n      :fields=\"visibleFields\"\n      :filters=\"[]\"\n      :value=\"stagedSelection || selectionPrimaryKeys\"\n      @input=\"stageSelection\"\n      @done=\"closeSelection\"\n      @cancel=\"cancelSelection\"\n    />\n\n    <portal v-if=\"editExisting\" to=\"modal\">\n      <v-modal\n        :title=\"$t('editing_item')\"\n        :buttons=\"{\n          save: {\n            text: 'Save',\n            color: 'accent'\n          }\n        }\"\n        @close=\"editExisting = false\"\n        @save=\"saveEdits\"\n      >\n        <div class=\"edit-modal-body\">\n          <v-form\n            :fields=\"relatedCollectionFields\"\n            :collection=\"relatedCollection\"\n            :values=\"editExisting\"\n            @stage-value=\"stageValue\"\n          ></v-form>\n        </div>\n      </v-modal>\n    </portal>\n\n    <portal v-if=\"addNew\" to=\"modal\">\n      <v-modal\n        :title=\"$t('creating_item')\"\n        :buttons=\"{\n          save: {\n            text: 'Save',\n            color: 'accent'\n          }\n        }\"\n        @close=\"addNew = null\"\n        @save=\"addNewItem\"\n      >\n        <div class=\"edit-modal-body\">\n          <v-form\n            new-item\n            :fields=\"relatedCollectionFields\"\n            :collection=\"collection\"\n            :values=\"relatedDefaultsWithEdits\"\n            @stage-value=\"stageValue\"\n          ></v-form>\n        </div>\n      </v-modal>\n    </portal>\n  </div>\n</template>\n\n<script>\nimport shortid from \"shortid\";\nimport mixin from \"@directus/extension-toolkit/mixins/interface\";\n\nexport default {\n  name: \"InterfaceOneToMany\",\n  mixins: [mixin],\n  data() {\n    return {\n      sort: {\n        field: null,\n        asc: true\n      },\n\n      selectExisting: false,\n\n      editExisting: null,\n      addNew: null,\n      edits: {},\n\n      dragging: false,\n\n      // Items to be rendered in the table preview\n      itemsRaw: [],\n      loading: false,\n      error: null,\n\n      stagedSelection: null\n    };\n  },\n  computed: {\n    items() {\n      const primaryKey = this.relatedKey;\n      return this.itemsRaw.map(item => {\n        if (item.hasOwnProperty(primaryKey)) return item;\n        return {\n          ...item,\n          $tempKey: shortid.generate()\n        };\n      });\n    },\n\n    // The items in this.itemsRaw sorted by the information in this.sort\n    itemsSorted: {\n      get() {\n        return _.orderBy(\n          this.items,\n          item => item[this.sort.field],\n          this.sort.asc ? \"asc\" : \"desc\"\n        ).filter(item => item.$delete !== true);\n      },\n      set(newValue) {\n        let value = _.clone(newValue);\n\n        value = value.map((item, index) => {\n          return {\n            ...item,\n            [this.relatedSortField.field]: index + 1\n          };\n        });\n\n        this.emitValue(value);\n        this.itemsRaw = value;\n      }\n    },\n\n    // The field on the related collection that has the type of sort\n    relatedSortField() {\n      return _.find(this.relatedCollectionFields, { type: \"sort\" });\n    },\n\n    // Check if the items are sortable by checking for the prescense of a sort field\n    sortable() {\n      return !!this.relatedSortField;\n    },\n\n    // If the user currently sorted by the manual sort option\n    manualSortActive() {\n      if (!this.sortable) return false;\n      return this.sort.field === this.relatedSortField.field;\n    },\n\n    // If the relationship has been configured\n    relationSetup() {\n      if (!this.relation) return false;\n      return true;\n    },\n\n    relatedCollection() {\n      return this.relation.collection_many.collection;\n    },\n\n    // Fields in the related collection\n    relatedCollectionFields() {\n      return this.relation.collection_many.fields;\n    },\n\n    // Primary key fieldname of the related collection\n    relatedKey() {\n      return _.find(this.relation.collection_many.fields, {\n        primary_key: true\n      }).field;\n    },\n\n    // Name of the field that holds the primary key of the current collection\n    relatedField() {\n      return this.relation.field_many.field;\n    },\n\n    // The fields that should be rendered in the modal / table\n    visibleFields() {\n      if (this.relationSetup === false) return [];\n      if (!this.options.fields) return [];\n\n      if (Array.isArray(this.options.fields)) {\n        return this.options.fields.map(val => val.trim());\n      }\n\n      return this.options.fields.split(\",\").map(val => val.trim());\n    },\n\n    // Column headers for the inline table preview\n    columns() {\n      if (this.relationSetup === false) return null;\n      return this.visibleFields.map(field => ({\n        field,\n        name: this.$helpers.formatTitle(field),\n        fieldInfo: this.relatedCollectionFields[field]\n      }));\n    },\n\n    // Default values of the related collection, used when creating an new item\n    relatedDefaultValues() {\n      if (this.relationSetup === false) return null;\n      if (!this.relatedCollectionFields) return null;\n\n      return _.mapValues(this.relatedCollectionFields, field => field.default_value);\n    },\n\n    // The current state of the new item. Combines default values with the edits made\n    relatedDefaultsWithEdits() {\n      if (this.relationSetup === false) return null;\n      if (!this.relatedDefaultValues) return null;\n\n      return {\n        ...this.relatedDefaultValues,\n        ...this.edits\n      };\n    },\n\n    // The current value in just primary keys. Can be passed to the item select modal\n    selectionPrimaryKeys() {\n      return (this.value || [])\n        .filter(item => item.$delete !== true)\n        .map(item => item[this.relatedKey])\n        .filter(key => key); // Filter out empty items\n    }\n  },\n  watch: {\n    relation() {\n      if (this.relationSetup) {\n        this.sort.field = this.visibleFields && this.visibleFields[0];\n      }\n    },\n    value() {\n      this.fetchItems();\n    }\n  },\n  created() {\n    if (this.relationSetup) {\n      if (this.sortable) {\n        this.sort.field = this.relatedSortField.field;\n      } else {\n        this.sort.field = this.visibleFields && this.visibleFields[0];\n      }\n    }\n\n    this.onSearchInput = _.debounce(this.onSearchInput, 200);\n    this.itemsRaw = this.value;\n  },\n  methods: {\n    changeSort(field) {\n      if (this.sort.field === field) {\n        this.sort.asc = !this.sort.asc;\n        return;\n      }\n\n      this.sort.asc = true;\n      this.sort.field = field;\n      return;\n    },\n\n    stageSelection(primaryKeys) {\n      this.stagedSelection = primaryKeys;\n    },\n\n    closeSelection() {\n      const currentSelection = _.clone(this.value || []);\n\n      let newSelection = currentSelection.map(item => {\n        const primaryKey = item[this.relatedKey];\n\n        if (this.stagedSelection.includes(primaryKey)) {\n          return {\n            [this.relatedKey]: primaryKey\n          };\n        }\n\n        return {\n          [this.relatedKey]: primaryKey,\n          $delete: true\n        };\n      });\n\n      const newlySelectedPrimaryKeys = _.difference(\n        this.stagedSelection,\n        currentSelection.map(i => i[this.relatedKey])\n      );\n\n      const newlySelected = newlySelectedPrimaryKeys.map(key => ({ [this.relatedKey]: key }));\n\n      newSelection = [...newSelection, ...newlySelected];\n\n      this.emitValue(newSelection);\n      this.stagedSelection = null;\n      this.selectExisting = false;\n    },\n\n    cancelSelection() {\n      this.stagedSelection = null;\n      this.selectExisting = false;\n    },\n\n    startEdit(primaryKey, tempKey) {\n      if (!primaryKey) {\n        const values = _.find(this.items, { $tempKey: tempKey });\n        this.editExisting = values;\n        return;\n      }\n\n      const collection = this.relation.collection_many.collection;\n\n      this.$api\n        .getItem(collection, primaryKey)\n        .then(res => res.data)\n        .then(item => (this.editExisting = item))\n        .catch(console.error);\n    },\n\n    stageValue({ field, value }) {\n      this.$set(this.edits, field, value);\n    },\n\n    // Emit the value to the parent component. Will filter out all nested copies of the current item\n    emitValue(value) {\n      // Filter out copies of the current relational parent item\n      value = value.map(item => {\n        if (typeof item === \"object\" && item.hasOwnProperty(this.relatedField)) {\n          delete item[this.relatedField];\n        }\n\n        return item;\n      });\n\n      // Filter out the temporary IDs\n      value = value.map(item => {\n        if (item.hasOwnProperty(\"$tempKey\")) {\n          delete item.$tempKey;\n        }\n\n        return item;\n      });\n\n      this.$emit(\"input\", value);\n    },\n\n    saveEdits() {\n      this.emitValue([\n        ...(this.value || []).map(val => {\n          if (val.id === this.editExisting[this.relatedKey]) {\n            return {\n              ...val,\n              ...this.edits\n            };\n          }\n\n          return val;\n        })\n      ]);\n\n      this.edits = {};\n      this.editExisting = false;\n    },\n    addNewItem() {\n      this.emitValue([...(this.value || []), this.edits]);\n\n      this.edits = {};\n      this.addNew = false;\n    },\n    removeRelated(relatedKey) {\n      const currentSelection = _.clone(this.value || []);\n\n      let value;\n\n      if (relatedKey) {\n        value = currentSelection.map(val => {\n          if (val[this.relatedKey] === relatedKey) {\n            return {\n              [this.relatedKey]: val[this.relatedKey],\n              $delete: true\n            };\n          }\n\n          return val;\n        });\n      } else {\n        value = currentSelection.filter(val => {\n          return val[this.relatedKey] !== relatedKey;\n        });\n      }\n\n      this.emitValue(value);\n    },\n    onSearchInput(value) {\n      this.setViewQuery({\n        q: value\n      });\n    },\n    toggleManualSort() {\n      this.sort.field = this.relatedSortField.field;\n      this.sort.asc = true;\n    },\n\n    // Fetches the items for the current selection. This should be fired whenever the value is changed\n    // so we can render the previews for the right fields in the table\n    fetchItems() {\n      const value = _.clone(this.value || []).filter(item => item.$delete !== true);\n      const collection = this.relation.collection_many.collection;\n      const fields = [...this.visibleFields, this.relatedKey];\n      const primaryKeys = value.map(item => item[this.relatedKey]);\n      const newItems = value.filter(item => item[this.relatedKey] === undefined);\n\n      if (primaryKeys.length === 0) {\n        this.itemsRaw = [];\n        return;\n      }\n\n      this.loading = true;\n\n      this.$api\n        .getItem(collection, primaryKeys, {\n          fields: fields\n        })\n        .then(res => res.data)\n        .then(data => {\n          if (Array.isArray(data)) return data;\n          return [data];\n        })\n        .then(items => {\n          // Augment the values in this.value with the extra data from the API\n          items = items.map(item => {\n            const primaryKey = item[this.relatedKey];\n            const currentValue = _.find(this.value || [], { [this.relatedKey]: primaryKey });\n            return _.merge(item, currentValue);\n          });\n\n          items = [...items, ...newItems];\n          this.itemsRaw = items;\n        })\n        .catch(error => (this.error = error))\n        .finally(() => (this.loading = false));\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.table {\n  background-color: var(--white);\n  border: var(--input-border-width) solid var(--lighter-gray);\n  border-radius: var(--border-radius);\n  border-spacing: 0;\n  width: 100%;\n  margin: 16px 0 24px;\n\n  .header {\n    height: var(--input-height);\n    border-bottom: 2px solid var(--lightest-gray);\n\n    button {\n      text-align: left;\n      font-weight: 500;\n      transition: color var(--fast) var(--transition);\n\n      &:hover {\n        transition: none;\n        color: var(--darker-gray);\n      }\n    }\n\n    i {\n      vertical-align: top;\n      color: var(--light-gray);\n    }\n  }\n\n  .row {\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n\n    > div {\n      padding: 3px 5px;\n      flex-basis: 200px;\n    }\n  }\n\n  .header .row {\n    align-items: center;\n    height: 40px;\n\n    & > button {\n      padding: 3px 5px 2px;\n      flex-basis: 200px;\n    }\n  }\n\n  .body {\n    max-height: 275px;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch;\n\n    .row {\n      cursor: pointer;\n      position: relative;\n      height: 50px;\n      border-bottom: 2px solid var(--off-white);\n\n      &:hover {\n        background-color: var(--highlight);\n      }\n\n      & div:last-of-type {\n        flex-grow: 1;\n      }\n\n      button {\n        color: var(--lighter-gray);\n        transition: color var(--fast) var(--transition);\n\n        &:hover {\n          transition: none;\n          color: var(--danger);\n        }\n      }\n    }\n  }\n}\n\n.buttons {\n  margin-top: 24px;\n}\n\n.buttons > * {\n  display: inline-block;\n}\n\n.buttons > *:first-child {\n  margin-right: 24px;\n}\n\n.edit-modal-body {\n  padding: 30px 30px 60px 30px;\n  background-color: var(--body-background);\n  .form {\n    grid-template-columns:\n      [start] minmax(0, var(--column-width)) [half] minmax(0, var(--column-width))\n      [full];\n  }\n}\n\n.search {\n  position: sticky;\n  left: 0;\n  top: 0;\n  &-input {\n    border-bottom: 2px solid var(--lightest-gray);\n    padding: 12px;\n\n    & >>> input {\n      border-radius: 0;\n      border: none;\n      padding-left: var(--page-padding);\n      height: var(--header-height);\n\n      &::placeholder {\n        color: var(--light-gray);\n      }\n    }\n  }\n}\n\n.items {\n  height: calc(100% - var(--header-height) - 1px);\n}\n\n.table .sort-column {\n  flex-basis: 36px !important;\n}\n\n.sort-column.disabled i {\n  color: var(--lightest-gray);\n  cursor: not-allowed;\n}\n\n.drag-handle {\n  cursor: grab;\n}\n\n.dragging {\n  cursor: grabbing !important;\n}\n\n// The alignment of the header sort toggle button is slightly off compared to the drag handles due\n// to the smaller overal icon size\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=85aff184&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input.vue?vue&type=style&index=0&id=85aff184&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"85aff184\",\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    }\n  }\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=85aff184&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=85aff184&lang=scss&scoped=true&\""],"sourceRoot":""}